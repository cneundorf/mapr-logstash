input {

file {
      type => "mapr-eco-oozie-log"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/oozie/oozie-*/logs/oozie.log*" ]
      sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
     }

file {
     type => "mapr-eco-oozie-ops"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/oozie/oozie-*/logs/oozie-ops.log*" ]
#      sincedb_path => "/tmp/sinced"
     sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
      }

file {
     type => "mapr-eco-oozie-jpa"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/oozie/oozie-*/logs/oozie-ops.jpa*" ]
#      sincedb_path => "/tmp/sinced"
     sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
      }

##### Hadoop YARN

file {
     type => "mapr-eco-yarn-nodemanager"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/hadoop/hadoop-2.4.1/logs/yarn-mapr-nodemanager*.log" ]
#      sincedb_path => "/tmp/sinced"
     sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
      }

file {
     type => "mapr-eco-yarn-resourcemanager"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/hadoop/hadoop-2.4.1/logs/yarn-mapr-resourcemanager*.log" ]
#      sincedb_path => "/tmp/sinced"
     sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
      }

file {
     type => "mapr-eco-yarn-historyserver"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/hadoop/hadoop-2.4.1/logs/yarn-mapr-historyserver*.log" ]
#      sincedb_path => "/tmp/sinced"
     sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
      }





file {
     type => "mapr-eco-yarn-userlogs"
      exclude => ["*.gz","*.zip","*.tgz"]
      path => [ "/opt/mapr/hadoop/hadoop-2.4.1/logs/userlogs/application*/container*/std*" ]
#      sincedb_path => "/tmp/sinced"
     sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
      }



}






# Add name=value pairs as fields

#filter {
#  if [type] == "syslog" {
#    grok {
#      match => { "message" => "%{SYSLOGLINE}" }
##      add_field => [ "received_at", "%{@timestamp}" ]
##      add_field => [ "received_from", "%{host}" ]
##    }
#    syslog_pri { }
#    date {
#      match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
#    }
#    }
#  }
#
filter {
    if [type] == "mapr-eco-oozie-log" {
    grok {
      match => { "message" => "%{MAPR_DATE:date}  %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

filter {
    if [type] == "mapr-eco-oozie-ops" {
    grok {
      match => { "message" => "%{MAPR_DATE:date}  %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

filter {
    if [type] == "mapr-eco-oozie-jpa" {
    grok {
      match => { "message" => "%{MAPR_DATE:date}  %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

filter {
    if [type] == "mapr-eco-yarn-nodemanager" {
    grok {
      #match => { "message" => "%{MAPR_DATE:date}  %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
     match => { "message" => "%{MAPR_DATE:date} %{LOGLEVEL:loglevel} %{MAPR_JAVA2:component_class} %{GREEDYDATA:sysmessage}" }

      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

filter {
    if [type] == "mapr-eco-yarn-historyserver" {
    grok {
      #match => { "message" => "%{MAPR_DATE:date}  %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
     match => { "message" => "%{MAPR_DATE:date} %{LOGLEVEL:loglevel} %{MAPR_JAVA2:component_class} %{GREEDYDATA:sysmessage}" }

      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

filter {
    if [type] == "mapr-eco-yarn-resourcemanager" {
    grok {
      #match => { "message" => "%{MAPR_DATE:date}  %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
     match => { "message" => "%{MAPR_DATE:date} %{LOGLEVEL:loglevel} %{MAPR_JAVA2:component_class} %{GREEDYDATA:sysmessage}" }

      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

filter {
    if [type] == "mapr-eco-yarn-userlogs" {
    grok {
     match => { "message" => "%{GREEDYDATA:sysmessage}" }
     #match => { "message" => "%{MAPR_DATE:date} %{LOGLEVEL:loglevel} %{MAPR_JAVA2:component_class} %{GREEDYDATA:sysmessage}" }

      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
   }
 }

output {
  elasticsearch {
    host => localhost
  }
  stdout { codec => rubydebug }
}
