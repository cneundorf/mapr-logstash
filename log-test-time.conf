input {
file {
      type => "mapr-warden"
      exclude => ["*.gz","*.zip","*.tgz"]
##     path => [ "/opt/mapr/logs/cldb.log", "/opt/mapr/logs/warden.log*", "/opt/mapr/logs/mfs-*.log" ]
      path => [ "/opt/mapr/logs/warden.log*" ]
      sincedb_path => "/dev/null"
      start_position => "beginning" ## should replace with end
     }

#file {
#     type => "mapr-cldb"
#      exclude => ["*.gz","*.zip","*.tgz"]
##     path => [ "/opt/mapr/logs/cldb.log", "/opt/mapr/logs/warden.log*", "/opt/mapr/logs/mfs-*.log" ]
#      path => [ "/opt/mapr/logs/cldb.log" ]
##      sincedb_path => "/tmp/sinced"
#     sincedb_path => "/dev/null"
#      start_position => "beginning" ## should replace with end
#      }
#
#file {
#     type => "mapr-mfs"
#      exclude => ["*.gz","*.zip","*.tgz"]
#      path => [ "/opt/mapr/logs/mfs.log-*" ]
##      sincedb_path => "/tmp/sinced"
#     sincedb_path => "/dev/null"
#      start_position => "beginning" ## should replace with end
#      }
}

#  if [type] == "syslog" {
#    grok {
#      match => { "message" => "%{SYSLOGLINE}" }
##      add_field => [ "received_at", "%{@timestamp}" ]
##      add_field => [ "received_from", "%{host}" ]
##    }
#    syslog_pri { }
#    timestamp {
#      match => [ "syslog_timestamp", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
#    }
#    }
#  }
#
filter {
    if [type] == "mapr-warden" {
    grok {
      match => { "message" => "%{MAPR_DATE:datetime} %{LOGLEVEL:loglevel}  %{MAPR_JAVA:component_class} %{MAPR_PROG:prog} %{GREEDYDATA:sysmessage}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date
    { match => [ "datetime", "yyyy-MM-dd HH:mm:ss,SSS" ] }
   }
 }

#filter {
#    if [type] == "mapr-cldb" {
#    grok {
#      match => { "message" => "%{MAPR_DATE:timestamp} %{LOGLEVEL:loglevel} %{WORD:component_class} %{MAPR_PROG:prog} %{GREEDYDATA:sysmessage}" }
#      #match => { "message" => "%{MAPR_DATE:timestamp} %{LOGLEVEL:loglevel}" }
#      add_field => [ "received_at", "%{@timestamp}" ]
#      add_field => [ "received_from", "%{host}" ]
#    }
#   }
# }
#
#filter {
#    if [type] == "mapr-mfs" {
#    grok {
#      match => { "message" => "%{MAPR_DATE:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:sysmessage}" }
#      #match => { "message" => "%{MAPR_DATE:timestamp} %{LOGLEVEL:loglevel}" }
#      add_field => [ "received_at", "%{@timestamp}" ]
#      add_field => [ "received_from", "%{host}" ]
#    }
#}
#}

output {
  elasticsearch {
    host => localhost
  }
  stdout { codec => rubydebug }
}
